{"numberOfLikes":270,"numberOfDislikes":21,"content":"<p>You are given a <strong>0-indexed</strong> array <code>words</code> containing <code>n</code> strings.</p>\n\n<p>Let's define a <strong>join</strong> operation <code>join(x, y)</code> between two strings <code>x</code> and <code>y</code> as concatenating them into <code>xy</code>. However, if the last character of <code>x</code> is equal to the first character of <code>y</code>, one of them is <strong>deleted</strong>.</p>\n\n<p>For example <code>join(\"ab\", \"ba\") = \"aba\"</code> and <code>join(\"ab\", \"cde\") = \"abcde\"</code>.</p>\n\n<p>You are to perform <code>n - 1</code> <strong>join</strong> operations. Let <code>str<sub>0</sub> = words[0]</code>. Starting from <code>i = 1</code> up to <code>i = n - 1</code>, for the <code>i<sup>th</sup></code> operation, you can do one of the following:</p>\n\n<ul>\n\t<li>Make <code>str<sub>i</sub> = join(str<sub>i - 1</sub>, words[i])</code></li>\n\t<li>Make <code>str<sub>i</sub> = join(words[i], str<sub>i - 1</sub>)</code></li>\n</ul>\n\n<p>Your task is to <strong>minimize</strong> the length of <code>str<sub>n - 1</sub></code>.</p>\n\n<p>Return <em>an integer denoting the minimum possible length of</em> <code>str<sub>n - 1</sub></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"aa\",\"ab\",\"bc\"]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>In this example, we can perform join operations in the following order to minimize the length of str<sub>2</sub>: \nstr<sub>0</sub> = \"aa\"\nstr<sub>1</sub> = join(str<sub>0</sub>, \"ab\") = \"aab\"\nstr<sub>2</sub> = join(str<sub>1</sub>, \"bc\") = \"aabc\" \nIt can be shown that the minimum possible length of str<sub>2</sub> is 4.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"ab\",\"b\"]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> In this example, str<sub>0</sub> = \"ab\", there are two ways to get str<sub>1</sub>: \njoin(str<sub>0</sub>, \"b\") = \"ab\" or join(\"b\", str<sub>0</sub>) = \"bab\". \nThe first string, \"ab\", has the minimum length. Hence, the answer is 2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre><strong>Input:</strong> words = [\"aaa\",\"c\",\"aba\"]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> In this example, we can perform join operations in the following order to minimize the length of str<sub>2</sub>: \nstr<sub>0</sub> = \"aaa\"\nstr<sub>1</sub> = join(str<sub>0</sub>, \"c\") = \"aaac\"\nstr<sub>2</sub> = join(\"aba\", str<sub>1</sub>) = \"abaaac\"\nIt can be shown that the minimum possible length of str<sub>2</sub> is 6.\n</pre>\n\n<div class=\"notranslate\" style=\"all: initial;\">&nbsp;</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 50</code></li>\n\t<li>Each character in <code>words[i]</code> is an English lowercase letter</li>\n</ul>\n","numberOfAcceptedSubmission":4300,"numberOfSubmission":18300,"numberOfDiscussion":11,"numberOfSolutions":121}